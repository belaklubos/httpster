@font-face {
  font-display: swap;
  font-family: "Konstant";
  src:
    url("/assets/typography/konstant-grotesk.woff2") format("woff2"),
    url("/assets/typography/konstant-grotesk.woff") format("woff");
}

:root {
  --gap-size: 1px;
  --area-size: 180px;
  --drip-size: 5rem;
  --main-color: #DDD;
  --secondary-color: #000;
  --accent-color-1: #00745B;
  --accent-color-2: #FFF509;
  --supplement-color-1: #DEA2B0;
  --supplement-color-2: #BDAAA2;
  --supplement-color-3: #FFF;
  --typography-1: "Konstant", "Fugue", "Futura", "Helvetica";
  --system-fonts: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", Arial, sans-serif;
  --gooey-opacity: 0.868;
  --gooey-span: 3;
  --offset: 0;
  --wave-length: 0;
  --last-drip-end-position: calc(var(--area-size) * var(--gooey-span));
  font-kerning: auto;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media screen and (prefers-color-scheme: dark) {
  :root {
    --main-color: #000;
    --secondary-color: #FFF;
    --gooey-opacity: 1;
  }
}

::selection {
  background: var(--accent-color-1);
  color: var(--secondary-color);
}

::-moz-selection {
  background: var(--accent-color-1);
  color: var(--secondary-color);
}

* {
  box-sizing: border-box;
  position: relative;
}

html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

body {
  align-items: center;
  background-color: var(--main-color);
  box-sizing: border-box;
  color: var(--secondary-color);
  font-family: var(--typography-1);
  justify-content: center;
  font-feature-settings: "liga"1;
  height: 100vh;
  margin: 0;
  overflow-x: hidden;
  padding: 0;
}

@supports (font-variant-ligatures: common-ligatures) {
  body {
    font-feature-settings: normal;
    font-variant-ligatures: common-ligatures;
  }
}

main {
  background-color: var(--secondary-color);
  border-bottom: var(--gap-size) solid var(--main-color);
  box-sizing: border-box;
  display: grid;
  grid-auto-rows: var(--area-size);
  grid-auto-flow: row dense;
  grid-template-columns: repeat(auto-fill, minmax(var(--area-size), 1fr));
  grid-template-rows: repeat(4, minmax(var(--area-size), 1fr));
  grid-gap: var(--gap-size);
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: relative;
  width: 100vw;
}

main::after {
  align-items: center;
  background-color: var(--main-color);
  bottom: 0;
  content: "";
  display: flex;
  height: var(--area-size);
  left: calc(var(--offset) * 1px);
  position: absolute;
  text-align: center;
  width: 100%;
}

h1,
h2 {
  display: inline-block;
  font-weight: normal;
  margin: 0;
}

code {
  transform: scaleX(0.5);
}

b,
strong {
  color: var(--accent-color-1);
  font-weight: bolder;
}

em {
  font-style: normal;
  color: var(--accent-color-2);
}

small {
  font-size: 80%;
}

svg {
  fill: var(--secondary-color);
  height: auto;
  transform-origin: center;
  width: 100%;
}

path {
  transform-origin: center;
}

svg:not(:root) {
  overflow: hidden;
}

main>section {
  align-items: center;
  background-color: var(--main-color);
  display: flex;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

aside {
  right: var(--area-size);
  mix-blend-mode: difference;
  opacity: 0.5;
  position: fixed;
  top: var(--area-size);
  z-index: 1;
}

dialog {
  background-color: var(--secondary-color);
  border: solid;
  color: var(--main-color);
  display: block;
  height: -moz-fit-content;
  height: -webkit-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -moz-fit-content;
  width: -webkit-fit-content;
  width: fit-content;
}

dialog:not([open]) {
  display: none;
}

template {
  display: none;
}

#circle {
  fill: var(--accent-color-1);
}

#gooey {
  grid-row: span var(--gooey-span);
  filter: contrast(50);
  opacity: var(--gooey-opacity);
  width: 100%;
}

#logo {
  grid-row: span 2;
}

#signature {
  grid-column: span 3;
}

#terminal {
  font-size: calc(3rem + 2.5vw);
}

#whoami {
  cursor: context-menu;
  font-size: calc(1rem + 0.6vw);
  grid-column: span 2;
  grid-row: span 3;
  hyphens: auto;
  line-height: 1.4;
  padding-left: 20%;
  padding-right: 20%;
}

#wheel-of-death {
  cursor: wait;
}

#year {
  background-color: inherit;
  color: var(--main-color);
  font-size: calc(3rem + 2.5vw);
  top: 1rem;
}

[â†’] {
  cursor: pointer;
  fill: var(--accent-color-2);
  margin-top: 0.5rem;
  width: 2rem;
}

[absolute] {
  position: absolute;
}

[blink] {
  animation: blink 1s cubic-bezier(1, 0, 0, 1) infinite;
}

[compass] {
  animation: compass 5s cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite alternate;
}

[drip] {
  backface-visibility: hidden;
  background-color: var(--secondary-color);
  border-radius: 50%;
  content: "";
  filter: blur(1rem);
  height: var(--drip-size);
  position: absolute;
  top: 0;
  transform: translateZ(0);
  width: var(--drip-size);
  will-change: transform;
}

[drip]:last-child {
  top: calc(100% - var(--drip-size));
}

[drop] {
  animation: drip 4s infinite ease-in-out alternate;
}

[gradient] {
  fill: url(#gradient);
}

[hidden] {
  display: none;
}

[invert] {
  animation: invert 200ms linear infinite alternate;
}

[rings] {
  stroke: var(--secondary-color);
}

[rotate] {
  animation: rotate 1s linear infinite;
}

[scale-slightly] {
  transform: scale(1.05);
}

[scale-up] {
  transform: scale(1.5);
}

[wave] {
  animation: wave 1s 1s linear forwards;
  stroke-dasharray: var(--wave-length);
  stroke-dashoffset: calc(var(--wave-length) * 2);
}

[wave]:nth-child(2) {
  animation-delay: 1.1s;
}

[wave]:nth-child(3) {
  animation-delay: 1.2s;
}

[wave]:nth-child(4) {
  animation-delay: 1.3s;
}

[wave]:nth-child(5) {
  animation-delay: 1.4s;
}

[wave]:nth-child(6) {
  animation-delay: 1.5s;
}

[wave]:nth-child(7) {
  animation-delay: 1.6s;
}

[wave]:nth-child(8) {
  animation-delay: 1.7s;
}

@keyframes blink {
  to {
    opacity: 0;
  }
}

@keyframes drip {
  to {
    transform: translateY(var(--last-drip-end-position));
  }
}

@keyframes invert {
  to {
    filter: invert(1);
  }
}

@keyframes rotate {
  to {
    transform: rotate(1turn);
  }
}

@keyframes compass {
  to {
    transform: rotate(15deg);
  }
}

@keyframes wave {
  to {
    stroke-dashoffset: 0;
  }
}

