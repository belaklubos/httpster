@font-face {
  font-display: swap;
  font-family: "Konstant";
  src:
    url("/assets/typography/konstant-grotesk.woff2") format("woff2"),
    url("/assets/typography/konstant-grotesk.woff") format("woff");
}

:root {
  --gap-size: 1px;
  --area-size: 180px;
  --dark-color: #000;
  --light-color: #fff;
  --accent-color-1: #59efbb;
  --accent-color-2: #410ed9;
  --typography-1: "Konstant", "Fugue", "Futura", "Helvetica";
  --system-fonts: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", Arial, sans-serif;
  --offset: 0;
  --wave-length: 0;
  font-kerning: auto;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

::selection {
  background: var(--accent-color-1);
  color: var(--light-color);
}

::-moz-selection {
  background: var(--accent-color-1);
  color: var(--light-color);
}

* {
  box-sizing: border-box;
  position: relative;
}

html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

body {
  align-items: center;
  background-color: var(--dark-color);
  box-sizing: border-box;
  color: var(--light-color);
  font-family: var(--typography-1);
  justify-content: center;
  font-feature-settings: "liga"1;
  height: 100vh;
  margin: 0;
  overflow-x: hidden;
  padding: 0;
}

@supports (font-variant-ligatures: common-ligatures) {
  body {
    font-feature-settings: normal;
    font-variant-ligatures: common-ligatures;
  }
}

main {
  background-color: var(--light-color);
  box-sizing: border-box;
  display: grid;
  grid-auto-rows: var(--area-size);
  grid-auto-flow: row dense;
  grid-template-columns: repeat(auto-fill, minmax(var(--area-size), 1fr));
  grid-template-rows: repeat(4, minmax(var(--area-size), 1fr));
  grid-gap: var(--gap-size);
  margin: 0;
  padding: 0;
  position: relative;
  width: 100vw;
}

main::after {
  align-items: center;
  background-color: var(--dark-color);
  bottom: 0;
  content: "";
  display: flex;
  height: var(--area-size);
  left: calc(var(--offset) * 1px);
  position: absolute;
  text-align: center;
  width: 100%;
}

h1,
h2 {
  display: inline-block;
  font-weight: normal;
  margin: 0;
}

code {
  transform: scaleX(0.5);
}

b,
strong {
  color: var(--accent-color-1);
  font-weight: bolder;
}

small {
  font-size: 80%;
}

svg {
  fill: var(--light-color);
  height: auto;
  transform-origin: 50% 50%;
  width: 100%;
}

svg:not(:root) {
  overflow: hidden;
}

main>section {
  align-items: center;
  background-color: var(--dark-color);
  display: flex;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

aside {
  left: var(--area-size);
  mix-blend-mode: difference;
  opacity: 0.5;
  position: fixed;
  top: var(--area-size);
  z-index: 1;
}

dialog {
  background-color: var(--light-color);
  border: solid;
  color: var(--dark-color);
  display: block;
  height: -moz-fit-content;
  height: -webkit-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -moz-fit-content;
  width: -webkit-fit-content;
  width: fit-content;
}

dialog:not([open]) {
  display: none;
}

template {
  display: none;
}

#circle {
  fill: var(--accent-color-1);
}

#logo {
  grid-row: span 2;
}

#signature {
  grid-column: span 3;
}

#terminal {
  font-size: calc(3rem + 2.5vw);
}

#vanilla {
  grid-row: span 3;
}

#whoami {
  cursor: context-menu;
  font-size: calc(1rem + 0.75vw);
  grid-column: span 2;
  grid-row: span 2;
  hyphens: auto;
  line-height: 1.618;
  padding-left: 20%;
  padding-right: 20%;
}

#wheel-of-death {
  cursor: wait;
}

#year {
  background-color: inherit;
  color: var(--dark-color);
  font-size: calc(3rem + 2.5vw);
  top: 1rem;
}

[â†’] {
  cursor: pointer;
  fill: var(--accent-color-2);
  margin-top: 0.5rem;
  width: 2rem;
}

[absolute] {
  position: absolute;
}

[blink] {
  animation: blink 1s infinite steps(2, start);
}

[gradient] {
  fill: url(#gradient);
}

[hidden] {
  display: none;
}

[invert] {
  animation: invert 200ms linear infinite alternate;
}

[rotate] {
  animation: rotate 1s linear infinite;
}

[rotate-slowly] {
  animation-duration: 10s;
}

[scale-slightly] {
  transform: scale(1.025);
}

[scale-up] {
  transform: scale(1.5);
}

[wave] {
  animation: wave 1s linear forwards reverse;
  stroke-dasharray: var(--wave-length);
  stroke-dashoffset: calc(var(--wave-length) * 2);
}

@keyframes blink {
  to {
    visibility: hidden
  }
}

@keyframes invert {
  to {
    filter: invert(1)
  }
}

@keyframes rotate {
  to {
    transform: rotate(1turn)
  }
}

@keyframes wave {
  to {
    stroke-dashoffset: 0
  }
}